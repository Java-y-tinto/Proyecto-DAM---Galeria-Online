name: Backend CI

on:
  push:
    branches:
      - main
      - master

jobs:
  test-backend:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U odoo"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      odoo:
        image: odoo:18.0
        ports:
          - 8069:8069
        env:
          HOST: db
          USER: odoo
          PASSWORD: odoo
          # Odoo intentará conectarse a una base de datos 'odoo' por defecto.
          # Si quieres que se conecte a 'postgres' inicialmente, podrías añadir:
          # DB_NAME: postgres 
          # Pero para este flujo, no es estrictamente necesario ya que creamos 'odoo_test' explícitamente.
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Mostrar contenedores en ejecución (depuración)
        run: docker ps -a

      - name: Instalar dependencias middleware
        working-directory: middleware 
        run: npm ci --omit=dev

      - name: Compilar middleware
        working-directory: middleware
        run: npm run compile

      - name: Verificar que Odoo está corriendo
        run: |
          echo "Esperando a que Odoo esté disponible en http://localhost:8069..."
          timeout 60s bash -c 'until curl -sf http://localhost:8069/web/health; do sleep 5; done'
          echo "Odoo está respondiendo."

      - name: Inicializar base de datos Odoo con datos demo
        env:
          ODOO_CONTAINER_ID: ${{ job.services.odoo.id }}
        run: |
          echo "ID del contenedor Odoo: $ODOO_CONTAINER_ID"
          
          # A continuación, se ejecuta el comando 'odoo' (odoo-bin) dentro del contenedor
          # para inicializar la base de datos 'odoo_test'.
          docker exec "$ODOO_CONTAINER_ID" odoo \
            -d odoo_test \
            -i base \
            --without-demo=False \
            --stop-after-init \
            --log-level=info \
            --db_host=db \
            --db_user=odoo \
            --db_password=odoo
            
          echo "Base de datos Odoo 'odoo_test' inicializada o la inicialización fue intentada."
      - name: ejecutar middleware
        working-directory: middleware
        run: npm run start

      - name: Ejecutar setup
        working-directory: middleware
        env:
          MIDDLEWARE_URL: http://localhost:4000/graphql
        run: npm run setup:ci

      - name: Ejecutar test de integracion
        working-directory: middleware
        env:
          ODOO_BASE_URL: http://localhost
          ODOO_PORT: 8069
          ODOO_DB_NAME: odoo_test
          ODOO_USERNAME: admin
          ODOO_PASSWORD: admin

        run: npm run testIntegrations